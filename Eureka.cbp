<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="Eureka" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Release">
				<Option output="bin/Release/Eureka" prefix_auto="1" extension_auto="1" />
				<Option external_deps="C:/Users/Kiseitai2/Documents/Dev-Cpp Projects/Engine_Eureka/bin/SDL.dll;C:/Users/Kiseitai2/Documents/Dev-Cpp Projects/Engine_Eureka/bin/SDL_mixer.dll;" />
				<Option type="0" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O3" />
					<Add option="-std=c++11" />
				</Compiler>
				<Linker>
					<Add option="-s" />
				</Linker>
			</Target>
			<Target title="staticlib_all">
				<Option output="bin/libs/Eureka" prefix_auto="1" extension_auto="1" />
				<Option working_dir="" />
				<Option type="2" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Compiler>
					<Add option="-Wall" />
					<Add option="-g" />
				</Compiler>
			</Target>
			<Target title="Debug">
				<Option output="bin/Eureka" prefix_auto="1" extension_auto="1" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
				</Compiler>
			</Target>
			<Target title="IO">
				<Option output="bin/engine/IO" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Linker>
					<Add library="Core" />
					<Add library="threading" />
				</Linker>
			</Target>
			<Target title="Threading">
				<Option output="bin/engine/threading" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
			</Target>
			<Target title="Unit">
				<Option output="bin/engine/Unit" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Linker>
					<Add library="Core" />
					<Add library="threading" />
					<Add library="Flags" />
				</Linker>
			</Target>
			<Target title="Core">
				<Option output="bin/engine/Core" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Linker>
					<Add library="Flags" />
					<Add library="Timer" />
					<Add library="lua_wrap" />
					<Add library="CRC_d" />
				</Linker>
			</Target>
			<Target title="UI">
				<Option output="bin/engine/UI" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Linker>
					<Add library="Core" />
					<Add library="threading" />
					<Add library="Flags" />
				</Linker>
			</Target>
			<Target title="Sound">
				<Option output="bin/engine/Sound" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Linker>
					<Add library="Core" />
					<Add library="threading" />
					<Add library="Flags" />
				</Linker>
			</Target>
			<Target title="Plugins">
				<Option output="bin/engine/plugins" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Linker>
					<Add library="Core" />
					<Add library="threading" />
				</Linker>
			</Target>
			<Target title="Network">
				<Option output="bin/engine/network" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Linker>
					<Add library="threading" />
				</Linker>
			</Target>
			<Target title="Eureka">
				<Option output="bin/engine/Eureka" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Linker>
					<Add library="Core" />
					<Add library="plugins" />
					<Add library="UI" />
					<Add library="IO" />
					<Add library="threading" />
					<Add library="network" />
					<Add library="Timer" />
					<Add library="Flags" />
					<Add library="Unit" />
					<Add library="Sound" />
					<Add library="avutil" />
					<Add library="swscale" />
					<Add library="avformat" />
					<Add library="avdevice" />
					<Add library="avcodec" />
					<Add directory="Dependencies/libFFmpeg/lib" />
				</Linker>
			</Target>
			<Target title="Flags">
				<Option output="bin/engine/Flags" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
			</Target>
			<Target title="Timer">
				<Option output="bin/engine/Timer" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Linker>
					<Add library="threading" />
				</Linker>
			</Target>
			<Target title="LuaWrap">
				<Option output="bin/engine/lua_wrap" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
			</Target>
			<Target title="data_base_test">
				<Option output="bin/tests/data_base_test" prefix_auto="1" extension_auto="1" />
				<Option working_dir="bin/tests" />
				<Option type="1" />
				<Option compiler="gcc" />
			</Target>
			<Target title="c++11_test">
				<Option output="bin/tests/c++11_test" prefix_auto="1" extension_auto="1" />
				<Option working_dir="bin/tests" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
				</Compiler>
			</Target>
			<Target title="plugin_test">
				<Option output="bin/tests/plugin_test" prefix_auto="1" extension_auto="1" />
				<Option working_dir="bin/tests" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Linker>
					<Add library="Core" />
					<Add library="plugins" />
				</Linker>
			</Target>
			<Target title="lua_wrap_test">
				<Option output="bin/tests/lua_wrap_test" prefix_auto="1" extension_auto="1" />
				<Option working_dir="bin/tests" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Linker>
					<Add library="Core" />
					<Add library="lua_wrap" />
				</Linker>
			</Target>
			<Target title="mysql_test">
				<Option output="bin/tests/mysql_test" prefix_auto="1" extension_auto="1" />
				<Option working_dir="bin/tests" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Linker>
					<Add library="Core" />
					<Add library="IO" />
				</Linker>
			</Target>
			<Target title="sqlite3_test">
				<Option output="bin/tests/sqlite_test" prefix_auto="1" extension_auto="1" />
				<Option working_dir="bin/tests" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Linker>
					<Add library="Core" />
					<Add library="IO" />
				</Linker>
			</Target>
			<Target title="scriptwrap_test">
				<Option output="bin/tests/scriptwrap_test" prefix_auto="1" extension_auto="1" />
				<Option working_dir="bin/tests" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Linker>
					<Add library="Core" />
				</Linker>
			</Target>
			<Target title="BST_test">
				<Option output="bin/tests/modadapter_test" prefix_auto="1" extension_auto="1" />
				<Option working_dir="bin/tests" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Linker>
					<Add library="Core" />
				</Linker>
			</Target>
			<Target title="Base_components_test">
				<Option output="bin/tests/base_components_test" prefix_auto="1" extension_auto="1" />
				<Option working_dir="bin/tests" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Linker>
					<Add library="threading" />
					<Add library="Core" />
				</Linker>
			</Target>
			<Target title="database_test">
				<Option output="bin/tests/database_test" prefix_auto="1" extension_auto="1" />
				<Option working_dir="bin/tests" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Linker>
					<Add library="Core" />
					<Add library="IO" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-std=c++11" />
			<Add option="-g" />
			<Add option="-ftrapv" />
			<Add option="-D__STDC_CONSTANT_MACROS" />
			<Add directory="c:/Python27/include" />
			<Add directory="Dependencies/SDL2-2.0.0/include" />
			<Add directory="Dependencies/SDL2_image-2.0.0/i686-w64-mingw32/include/SDL2" />
			<Add directory="Dependencies/SDL2_mixer-2.0.0/i686-w64-mingw32/include/SDL2" />
			<Add directory="Dependencies/SDL2_ttf-2.0.12/i686-w64-mingw32/include/SDL2" />
			<Add directory="Dependencies/lua-5.2.3/src" />
			<Add directory="Dependencies/sqlite3" />
			<Add directory="Dependencies/mysql-connector-c-6.1.5-win32/include" />
			<Add directory="Dependencies/mysql-connector-c++-noinstall-1.1.4-win32/include" />
			<Add directory="Dependencies/libFFmpeg/include" />
			<Add directory="Dependencies/CRC" />
			<Add directory="Dependencies/SDL2_net-2.0.0/i686-w64-mingw32/include/SDL2" />
			<Add directory="../../../../../MinGW/msys/1.0/local/include/boost" />
			<Add directory="../../../../../MinGW/msys/1.0/local/include" />
			<Add directory="../../../../../Program Files (x86)/CodeBlocks/MinGW/msys/1.0/local/include/boost" />
			<Add directory="../../../../../Program Files (x86)/CodeBlocks/MinGW/msys/1.0/local/include" />
		</Compiler>
		<Linker>
			<Add library="libmingw32" />
			<Add library="libSDL2main" />
			<Add library="libSDL2.dll" />
			<Add library="SDL2_mixer" />
			<Add library="libpython27" />
			<Add library="SDL2_ttf" />
			<Add library="SDL2_image" />
			<Add library="lua" />
			<Add library="sqlite3" />
			<Add library="mysqlcppconn" />
			<Add library="SDL2_net" />
			<Add library="pthread" />
			<Add directory="c:/Python27/libs" />
			<Add directory="Dependencies/SDL2-2.0.0/i686-w64-mingw32/lib" />
			<Add directory="Dependencies/SDL2_mixer-2.0.0/i686-w64-mingw32/lib" />
			<Add directory="Dependencies/SDL2_image-2.0.0/i686-w64-mingw32/lib" />
			<Add directory="Dependencies/SDL2_ttf-2.0.12/i686-w64-mingw32/lib" />
			<Add directory="Dependencies/lua-5.2.3/src" />
			<Add directory="Dependencies/sqlite3/win32_lib" />
			<Add directory="Dependencies/mysql-connector-c-6.1.5-win32/lib" />
			<Add directory="Dependencies/mysql-connector-c++-noinstall-1.1.4-win32/lib" />
			<Add directory="Dependencies/libFFmpeg/lib" />
			<Add directory="Dependencies/CRC" />
			<Add directory="Dependencies/SDL2_net-2.0.0/i686-w64-mingw32/lib" />
			<Add directory="../../../../../MinGW/msys/1.0/local/lib" />
			<Add directory="../../../../../Program Files (x86)/CodeBlocks/MinGW/msys/1.0/local/lib" />
			<Add directory="bin/engine" />
		</Linker>
		<Unit filename="BST.cc">
			<Option target="&lt;{~None~}&gt;" />
		</Unit>
		<Unit filename="BST.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="Eureka_lua.cxx">
			<Option target="staticlib_all" />
			<Option target="Eureka" />
		</Unit>
		<Unit filename="Eureka_wrap.cxx">
			<Option target="staticlib_all" />
			<Option target="Eureka" />
		</Unit>
		<Unit filename="Queue.cc">
			<Option target="&lt;{~None~}&gt;" />
		</Unit>
		<Unit filename="Queue.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="Timer.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
			<Option target="Timer" />
		</Unit>
		<Unit filename="Timer.h">
			<Option target="Core" />
			<Option target="Timer" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="Unit_tests/base_components_test.cpp">
			<Option target="Base_components_test" />
		</Unit>
		<Unit filename="Unit_tests/bst_test.cpp">
			<Option target="BST_test" />
		</Unit>
		<Unit filename="Unit_tests/c++11_test.cpp">
			<Option target="c++11_test" />
		</Unit>
		<Unit filename="Unit_tests/data_base_test.cpp">
			<Option target="data_base_test" />
		</Unit>
		<Unit filename="Unit_tests/database_test.cpp">
			<Option target="database_test" />
		</Unit>
		<Unit filename="Unit_tests/game_managers_test.cpp">
			<Option target="&lt;{~None~}&gt;" />
		</Unit>
		<Unit filename="Unit_tests/lua_wrap_test.cpp">
			<Option target="lua_wrap_test" />
		</Unit>
		<Unit filename="Unit_tests/modules_test.cpp">
			<Option target="plugin_test" />
		</Unit>
		<Unit filename="Unit_tests/mysql_test.cpp">
			<Option target="mysql_test" />
		</Unit>
		<Unit filename="Unit_tests/scriptwrap_test.cpp">
			<Option target="scriptwrap_test" />
		</Unit>
		<Unit filename="Unit_tests/sqlite3_test.cpp">
			<Option target="sqlite3_test" />
		</Unit>
		<Unit filename="button.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="button.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="config.h">
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="conversion.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
			<Option target="Threading" />
			<Option target="data_base_test" />
		</Unit>
		<Unit filename="conversion.h">
			<Option target="Core" />
			<Option target="Threading" />
			<Option target="staticlib_all" />
			<Option target="data_base_test" />
		</Unit>
		<Unit filename="core.cpp">
			<Option target="Flags" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="cursor.cpp">
			<Option target="Eureka" />
		</Unit>
		<Unit filename="cursor.h">
			<Option target="Eureka" />
		</Unit>
		<Unit filename="data_base.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
			<Option target="data_base_test" />
		</Unit>
		<Unit filename="data_base.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
			<Option target="data_base_test" />
		</Unit>
		<Unit filename="database.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="database.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="draw_base.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="draw_base.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="eureka.h">
			<Option target="staticlib_all" />
			<Option target="c++11_test" />
			<Option target="IO" />
		</Unit>
		<Unit filename="game.cpp">
			<Option target="Eureka" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="game.h">
			<Option target="Eureka" />
			<Option target="Flags" />
			<Option target="Timer" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="globals.h">
			<Option target="&lt;{~None~}&gt;" />
		</Unit>
		<Unit filename="info.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="info.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="input.cpp">
			<Option target="staticlib_all" />
			<Option target="UI" />
		</Unit>
		<Unit filename="input.h">
			<Option target="UI" />
		</Unit>
		<Unit filename="iomanager.cpp">
			<Option target="staticlib_all" />
			<Option target="IO" />
		</Unit>
		<Unit filename="iomanager.h">
			<Option target="staticlib_all" />
			<Option target="IO" />
		</Unit>
		<Unit filename="layersystem.cpp">
			<Option target="Eureka" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="layersystem.h">
			<Option target="Eureka" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="level.cpp">
			<Option target="staticlib_all" />
			<Option target="Eureka" />
		</Unit>
		<Unit filename="level.h">
			<Option target="Eureka" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="luawrap.cpp">
			<Option target="LuaWrap" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="luawrap.h">
			<Option target="LuaWrap" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="main.cpp">
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="modadapter.cpp">
			<Option target="Plugins" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="modadapter.h">
			<Option target="Plugins" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="modules.cpp">
			<Option target="staticlib_all" />
			<Option target="Plugins" />
		</Unit>
		<Unit filename="modules.h">
			<Option target="staticlib_all" />
			<Option target="Plugins" />
		</Unit>
		<Unit filename="mysql.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="mysql.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="networking.cpp">
			<Option target="staticlib_all" />
			<Option target="Network" />
		</Unit>
		<Unit filename="networking.h">
			<Option target="staticlib_all" />
			<Option target="Network" />
		</Unit>
		<Unit filename="particlesystem.cpp">
			<Option target="staticlib_all" />
			<Option target="Unit" />
		</Unit>
		<Unit filename="particlesystem.h">
			<Option target="staticlib_all" />
			<Option target="Unit" />
		</Unit>
		<Unit filename="physics.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="physics.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="plugin.cpp">
			<Option target="Plugins" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="plugin.h">
			<Option target="Plugins" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="progressbar.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="progressbar.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="pywrap.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="pywrap.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="rand_generators.cpp">
			<Option target="Threading" />
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="rand_generators.h">
			<Option target="Threading" />
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="scriptwrap.cpp">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="scriptwrap.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="sound_base.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="sound_base.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="soundqueue.cpp">
			<Option target="Sound" />
		</Unit>
		<Unit filename="soundqueue.h">
			<Option target="Sound" />
		</Unit>
		<Unit filename="sqlite_error.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="sqlite_error.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="sqlite_row.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="sqlite_row.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="sqlitewrap.cpp">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="sqlitewrap.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="sqlkeywords.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="sqlkeywords.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="textbox.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="textbox.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="texture_store.cpp">
<<<<<<< HEAD
			<Option target="Core" />
=======
			<Option target="&lt;{~None~}&gt;" />
>>>>>>> origin/TheIllusiveMan
		</Unit>
		<Unit filename="texture_store.h">
			<Option target="Core" />
		</Unit>
		<Unit filename="threading.cpp">
			<Option target="staticlib_all" />
			<Option target="Threading" />
		</Unit>
		<Unit filename="threading.h">
			<Option target="staticlib_all" />
			<Option target="Threading" />
		</Unit>
		<Unit filename="timersystem.cpp">
			<Option target="Timer" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="timersystem.h">
			<Option target="Timer" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="trigger.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="trigger.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="triggermanager.cpp">
			<Option target="staticlib_all" />
			<Option target="Eureka" />
		</Unit>
		<Unit filename="triggermanager.h">
			<Option target="staticlib_all" />
			<Option target="Eureka" />
		</Unit>
		<Unit filename="typedefs.h">
			<Option target="IO" />
			<Option target="Threading" />
			<Option target="Network" />
			<Option target="LuaWrap" />
			<Option target="Unit" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="ui.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="ui.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="uimanager.cpp">
			<Option target="staticlib_all" />
			<Option target="UI" />
		</Unit>
		<Unit filename="uimanager.h">
			<Option target="staticlib_all" />
			<Option target="UI" />
		</Unit>
		<Unit filename="unit.cpp">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="unit.h">
			<Option target="Core" />
			<Option target="staticlib_all" />
		</Unit>
		<Unit filename="unitmanager.cpp">
			<Option target="staticlib_all" />
			<Option target="Unit" />
		</Unit>
		<Unit filename="unitmanager.h">
			<Option target="staticlib_all" />
			<Option target="Unit" />
		</Unit>
		<Unit filename="utf8.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="utf8/checked.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="utf8/core.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="utf8/unchecked.h">
			<Option target="staticlib_all" />
			<Option target="Core" />
		</Unit>
		<Unit filename="videoplayer.cpp">
			<Option target="Eureka" />
		</Unit>
		<Unit filename="videoplayer.h">
			<Option target="Eureka" />
		</Unit>
		<Extensions>
			<code_completion />
			<debugger />
			<envvars />
			<DoxyBlocks>
				<comment_style block="0" line="0" />
				<doxyfile_project />
				<doxyfile_build />
				<doxyfile_warnings />
				<doxyfile_output />
				<doxyfile_dot />
				<general />
			</DoxyBlocks>
		</Extensions>
	</Project>
</CodeBlocks_project_file>
